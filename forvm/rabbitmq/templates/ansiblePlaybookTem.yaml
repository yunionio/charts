{{- $masterNode := .Values.virtualMachines.masterNode }}
{{- $playbook := $masterNode.ansiblePlaybook }}
apiVersion: onecloud.yunion.io/v1
kind: AnsiblePlaybookTemplate
metadata:
  name: rm-{{ .Release.Name }}-pktem
spec:
  playbook: |
    - hosts: all
      become: true

      tasks:
        - name: Check if backup
          stat:
            path: /etc/yum.repos.d/CentOS-Base.repo.bk
          register: bk_status

        - name: Backup origin repository
          command: mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bk
          when: bk_status.stat.exists == False
          failed_when: False

        - name: Add base repository
          yum_repository:
            name: base
            description: CentOS-$releasever - Base
            baseurl: "{{`{{ repo_url }}`}}/centos/$releasever/os/$basearch/"
            gpgcheck: yes
            gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
            file: CentOS-Base

        - name: Add updates repository
          yum_repository:
            name: updates
            description: CentOS-$releasever - Updates
            baseurl: "{{`{{ repo_url }}`}}/centos/$releasever/updates/$basearch/"
            gpgcheck: yes
            gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
            file: CentOS-Base

        - name: Setup Rabbitmq
          include_role:
            name: ansible-rabbitmq
          vars:
            rabbitmq_redhat_version: 3.8.19
            rabbitmq_redhat_url: "{{`{{ repo_url }}`}}/rabbitmq/downloads/v3.8.19"
            rabbitmq_redhat_package: rabbitmq-server-3.8.19-1.el7.noarch.rpm
            erlang_solutions_redhat_repo_url: "{{`{{ repo_url }}`}}/erlang-solutions/centos/$releasever"
            {{- if $playbook.rabbitmq.config }}
            rabbitmq_config:
              {{- toYaml .playbook.rabbitmq.config | nindent 8 }}
            {{- end }}
            rabbitmq_enable_clustering: true
            rabbitmq_master: rm-{{ .Release.Name }}-master
            rabbitmq_listen_port: {{ $playbook.rabbitmq.listen_port }}
            {{- if $playbook.rabbitmq.extra_vhosts }}
            rabbitmq_extra_vhosts: 
              {{- toYaml .playbook.rabbitmq.extra_vhosts | nindent 8 }}
            {{- end }}
            rabbitmq_users:
              - name: {{ $playbook.rabbitmq.adminUsername }}
                password: {{ $playbook.rabbitmq.adminPassword }}
                vhost: /
                configure_priv: ".*"
                read_priv: ".*"
                write_priv: ".*"
                tags: administrator
        - name: Setup Telegraf
          include_role:
            name: ansible-telegraf
          vars:
            telegraf_agent_version: 1.19.2-yn~fe11a96b
            telegraf_agent_version_patch: 0
            telegraf_agent_package_method: offline
            tenegraf_agent_hostname: rm-{{ .Release.Name }}-master
            telegraf_global_tags:
              - tag_name: release_name
                tag_value: {{ .Release.Name }}
            telegraf_agent_output:
              - type: influxdb
                config:
                  - urls = ["{{`{{ influxdb_url }}`}}"]
                  - database = "telegraf"
                  - insecure_skip_verify = true
            telegraf_plugins_default:
              - plugin: rabbitmq
                config:
                  - username = "{{ $playbook.rabbitmq.adminUsername }}"
                  - password = "{{ $playbook.rabbitmq.adminPassword }}"
                  - insecure_skip_verify = true
  requirements: |
    - src: https://github.com/yunionio/ansible-rabbitmq
    - src: https://github.com/yunionio/ansible-telegraf
  vars:
    - name: onecloud_vm_id  
      required: true
    - name: onecloud_tenant_id
      required: true
    - name: onecloud_domain_id
      required: true

